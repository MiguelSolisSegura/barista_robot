<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="barista_robot">
    <!-- Include Macros -->
    <xacro:include filename="$(find barista_robot_description)/xacro/wheel.xacro"/>
    <xacro:include filename="$(find barista_robot_description)/xacro/caster.xacro"/>
    <xacro:include filename="$(find barista_robot_description)/xacro/standoff.xacro"/>
    <xacro:include filename="$(find barista_robot_description)/xacro/cup_holder_tray.xacro"/>
    <xacro:include filename="$(find barista_robot_description)/xacro/laser_scanner.xacro"/>
    <!--- General Properties -->
    <xacro:property name="robot_name" value="$(arg robot_name)"/>
    <!-- Chassis Properties -->
    <xacro:property name="chassis_radius" value="0.178"/>
    <xacro:property name="chassis_length" value="0.155"/>
    <xacro:property name="chassis_mass" value="12"/>
    <xacro:property name="chassis_red" value="$(arg chassis_red)"/>
    <!-- Wheel Properties -->
    <xacro:property name="wheel_radius" value="0.0352"/>
    <xacro:property name="wheel_width" value="0.0206"/>
    <xacro:property name="wheel_mass" value="0.25"/>
    <xacro:property name="wheel_separation" value="0.290"/>
    <!-- Caster Properties -->
    <xacro:property name="caster_mass" value="0.25"/>
    <!-- Standoff Properties -->
    <xacro:property name="standoff_radius" value="0.01"/>
    <xacro:property name="standoff_length" value="0.22"/>
    <xacro:property name="standoff_mass" value="0.25"/>
    <xacro:property name="standoff_x_offset" value="0.040"/>
    <xacro:property name="standoff_y_offset" value="0.125"/>
    <!-- Cup Holder Properties -->
    <xacro:property name="cup_holder_radius" value="0.160"/>
    <xacro:property name="cup_holder_length" value="0.090"/>
    <xacro:property name="cup_holder_mass" value="6"/>
    <!-- Laser Sensor Properties -->
    <xacro:property name="include_laser" value="true"/>

    <!-- White Material -->
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>
    <!-- Black Material -->
    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>
    <!-- Reference Frame-->
    <link name="base_link">
        <inertial>
            <mass value="0.0001"/>
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
        </inertial>
    </link>
    <!-- Chassis -->
    <link name="chassis">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <xacro:if value="${chassis_red}">
                    <mesh filename="package://barista_robot_description/meshes/chassis_red.dae" scale="1 1 1"/>
                </xacro:if>
                <xacro:unless value="${chassis_red}">
                    <mesh filename="package://barista_robot_description/meshes/chassis.dae" scale="1 1 1"/>
                </xacro:unless>
            </geometry>
        </visual>
        <inertial>
            <mass value="${chassis_mass}"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia 
                ixx="${1/12.0 * chassis_mass * (3 * chassis_radius * chassis_radius + chassis_length * chassis_length)}" 
                ixy="0" 
                ixz="0" 
                iyy="${1/12.0 * chassis_mass * (3 * chassis_radius * chassis_radius + chassis_length * chassis_length)}" 
                iyz="0" 
                izz="${1/2.0 * chassis_mass * chassis_radius * chassis_radius}"/>
        </inertial>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <cylinder radius="${chassis_radius}" length="${chassis_length}"/>
            </geometry>
        </collision>
    </link>
    <!-- Reference - Chassis -->
    <joint name="reference_to_chassis" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="0 0 ${wheel_radius + chassis_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="reference_to_chassis">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Left Wheel -->
    <xacro:wheel link_name="left_wheel" radius="${wheel_radius}" width="${wheel_width}" mass="${wheel_mass}"/>
    <!-- Chassis - Left Wheel -->
    <joint name="chassis_to_left_wheel" type="continuous">
        <parent link="chassis"/>
        <child link="left_wheel"/>
        <origin xyz="0 ${wheel_separation / 2} ${-chassis_length / 2}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="1.0"/>
    </joint>
    <!-- Right Wheel -->
    <xacro:wheel link_name="right_wheel" radius="${wheel_radius}" width="${wheel_width}" mass="${wheel_mass}"/>
    <!-- Chassis - Right Wheel -->
    <joint name="chassis_to_right_wheel" type="continuous">
        <parent link="chassis"/>
        <child link="right_wheel"/>
        <origin xyz="0 ${-wheel_separation / 2} ${-chassis_length / 2}" rpy="0 0 0"/>
        <axis xyz="0 1 0"/>
        <limit effort="10000" velocity="1000" />
        <joint_properties damping="1.0" friction="1.0"/>
    </joint>
    <!-- Front Caster -->
    <xacro:caster link_name="front_caster" radius="${wheel_radius}" mass="${caster_mass}"/>
    <!-- Chassis - Front Caster -->
    <joint name="chassis_to_front_caster" type="fixed">
        <parent link="chassis"/>
        <child link="front_caster"/>
        <origin xyz="${wheel_separation / 2 - 0.020} 0 ${-chassis_length / 2}" rpy="0 0 0"/>
        <joint_properties damping="1.0" friction="1.0"/>
    </joint>
    <gazebo reference="chassis_to_front_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Back Caster -->
    <xacro:caster link_name="back_caster" radius="${wheel_radius}" mass="${caster_mass}"/>
    <!-- Chassis - Back Caster -->
    <joint name="chassis_to_back_caster" type="fixed">
        <parent link="chassis"/>
        <child link="back_caster"/>
        <origin xyz="${-wheel_separation / 2 + 0.020} 0 ${-chassis_length / 2}" rpy="0 0 0"/>
        <joint_properties damping="1.0" friction="1.0"/>
    </joint>
    <gazebo reference="chassis_to_back_caster">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Rod A -->
    <xacro:standoff link_name="rod_a" radius="${standoff_radius}" length="${standoff_length}" mass="${standoff_mass}"/>
    <!-- Chassis - Rod A -->
    <joint name="chassis_to_rod_a" type="fixed">
        <parent link="chassis"/>
        <child link="rod_a"/>
        <origin xyz="${standoff_x_offset} ${standoff_y_offset} ${chassis_length / 2 + standoff_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_rod_a">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Rod B -->
    <xacro:standoff link_name="rod_b" radius="${standoff_radius}" length="${standoff_length}" mass="${standoff_mass}"/>
    <!-- Chassis - Rod B -->
    <joint name="chassis_to_rod_b" type="fixed">
        <parent link="chassis"/>
        <child link="rod_b"/>
        <origin xyz="${-standoff_x_offset} ${standoff_y_offset} ${chassis_length / 2 + standoff_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_rod_b">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Rod C -->
    <xacro:standoff link_name="rod_c" radius="${standoff_radius}" length="${standoff_length}" mass="${standoff_mass}"/>
    <!-- Chassis - Rod C -->
    <joint name="chassis_to_rod_c" type="fixed">
        <parent link="chassis"/>
        <child link="rod_c"/>
        <origin xyz="${standoff_x_offset} ${-standoff_y_offset} ${chassis_length / 2 + standoff_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_rod_c">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Rod D -->
    <xacro:standoff link_name="rod_d" radius="${standoff_radius}" length="${standoff_length}" mass="${standoff_mass}"/>
    <!-- Chassis - Rod D -->
    <joint name="chassis_to_rod_d" type="fixed">
        <parent link="chassis"/>
        <child link="rod_d"/>
        <origin xyz="${-standoff_x_offset} ${-standoff_y_offset} ${chassis_length / 2 + standoff_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_rod_d">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Cup Holder -->
    <xacro:cup_holder_tray radius="${cup_holder_radius}" length="${cup_holder_length}" mass="${cup_holder_mass}" chassis_red="${chassis_red}"/>
    <!-- Chassis - Cup Holder -->
    <joint name="chassis_to_cup_holder" type="fixed">
        <parent link="chassis"/>
        <child link="cup_holder"/>
        <origin xyz="0 0 ${chassis_length / 2 + standoff_length + cup_holder_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_cup_holder">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Laser Sensor -->
    <xacro:laser_scanner robot_name="${robot_name}" include_laser="${include_laser}"/>
    <!-- Chassis - Laser Sensor -->
    <joint name="chassis_to_laser_sensor" type="fixed">
        <parent link="chassis"/>
        <child link="laser_sensor"/>
        <origin xyz="${chassis_radius * 65 / 89.0} 0 ${chassis_length / 2}" rpy="0 0 0"/>
    </joint>
    <gazebo reference="chassis_to_laser_sensor">
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>
    <!-- Joint State Plugin -->
    <gazebo>
        <plugin name="barista_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <namespace>/${robot_name}</namespace>
                <remapping>~/out:=joint_states</remapping>
            </ros>
            <update_rate>30</update_rate>
            <joint_name>chassis_to_left_wheel</joint_name>
            <joint_name>chassis_to_right_wheel</joint_name>
        </plugin>
    </gazebo>
    <!-- Differential Drive Plugin -->
    <gazebo>
        <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
            <ros>
                <namespace>/${robot_name}</namespace>
                <remapping>/cmd_vel:=cmd_vel</remapping>
            </ros>
            <!-- wheels -->
            <left_joint>chassis_to_left_wheel</left_joint>
            <right_joint>chassis_to_right_wheel</right_joint>
            <!-- kinematics -->
            <wheel_separation>${wheel_separation}</wheel_separation>
            <wheel_diameter>${wheel_radius * 2}</wheel_diameter>
            <!-- limits -->
            <max_wheel_torque>1.0</max_wheel_torque>
            <max_wheel_acceleration>2.0</max_wheel_acceleration>
            <!-- output -->
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <odometry_frame>${robot_name}/odom</odometry_frame>
            <robot_base_frame>${robot_name}/base_link</robot_base_frame>
        </plugin>
    </gazebo>
</robot>